@model IEnumerable<FUMiniHotel.DAO.BookingReservation>

@{
    ViewBag.Title = "Manage Bookings";
    int pageSize = 5; // Number of reservations per page
    int currentPage = ViewBag.CurrentPage ?? 1; // Default to page 1 if no page is specified
    int totalReservations = ViewBag.TotalReservations ?? 0; // Total number of reservations
    int totalPages = (int)Math.Ceiling(totalReservations / (double)pageSize); // Calculate total pages
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Reuse the same CSS from your existing view */
        body {
            color: #566787;
            background: #f5f5f5;
            font-family: 'Varela Round', sans-serif;
            font-size: 13px;
        }

        .table-responsive {
            margin: 30px 0;
        }

        .table-wrapper {
            background: #fff;
            padding: 20px 25px;
            border-radius: 3px;
            width: 100%;
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
            padding-bottom: 15px;
            background: #f28c38; /* Orange background from screenshot */
            color: #fff;
            padding: 16px 30px;
            min-width: 100%;
            margin: -20px -25px 10px;
            border-radius: 3px 3px 0 0;
        }

            .table-title h2 {
                margin: 5px 0 0;
                font-size: 24px;
                color: #fff; /* White text to match screenshot */
            }

            .table-title .btn-group {
                float: right;
            }

            .table-title .btn {
                color: #fff;
                float: right;
                font-size: 13px;
                border: none;
                min-width: 50px;
                border-radius: 2px;
                border: none;
                outline: none !important;
                margin-left: 10px;
            }

                .table-title .btn i {
                    float: left;
                    font-size: 21px;
                    margin-right: 5px;
                }

                .table-title .btn span {
                    float: left;
                    margin-top: 2px;
                }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
            padding: 12px 15px;
            vertical-align: middle;
        }

            table.table tr th:first-child {
                width: 60px;
            }

            table.table tr th:last-child {
                width: 100px;
            }

        table.table-striped tbody tr:nth-of-type(odd) {
            background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
            background: #f5f5f5;
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table td:last-child i {
            opacity: 0.9;
            font-size: 22px;
            margin: 0 5px;
        }

        table.table td a {
            font-weight: bold;
            color: #566787;
            display: inline-block;
            text-decoration: none;
            outline: none !important;
        }

            table.table td a:hover {
                color: #2196f3;
            }

            table.table td a.edit {
                color: #ffc107;
            }

            table.table td a.delete {
                color: #f44336;
            }

        table.table td i {
            font-size: 19px;
        }

        table.table .avatar {
            border-radius: 50%;
            vertical-align: middle;
            margin-right: 10px;
        }

        .pagination {
            float: right;
            margin: 0 0 5px;
        }

            .pagination li a {
                border: none;
                font-size: 13px;
                min-width: 30px;
                min-height: 30px;
                color: #999;
                margin: 0 2px;
                line-height: 30px;
                border-radius: 2px !important;
                text-align: center;
                padding: 0 6px;
            }

                .pagination li a:hover {
                    color: #666;
                }

            .pagination li.active a, .pagination li.active a.page-link {
                background: #03a9f4;
            }

                .pagination li.active a:hover {
                    background: #0397d6;
                }

            .pagination li.disabled i {
                color: #ccc;
            }

            .pagination li i {
                font-size: 16px;
                padding-top: 6px;
            }

        .hint-text {
            float: left;
            margin-top: 10px;
            font-size: 13px;
        }

        .custom-checkbox {
            position: relative;
        }

            .custom-checkbox input[type="checkbox"] {
                opacity: 0;
                position: absolute;
                margin: 5px 0 0 3px;
                z-index: 9;
            }

            .custom-checkbox label:before {
                width: 18px;
                height: 18px;
            }

            .custom-checkbox label:before {
                content: '';
                margin-right: 10px;
                display: inline-block;
                vertical-align: text-top;
                background: white;
                border: 1px solid #bbb;
                border-radius: 2px;
                box-sizing: border-box;
                z-index: 2;
            }

            .custom-checkbox input[type="checkbox"]:checked + label:after {
                content: '';
                position: absolute;
                left: 6px;
                top: 3px;
                width: 6px;
                height: 11px;
                border: solid #000;
                border-width: 0 3px 3px 0;
                transform: inherit;
                z-index: 3;
                transform: rotateZ(45deg);
            }

            .custom-checkbox input[type="checkbox"]:checked + label:before {
                border-color: #03a9f4;
                background: #03a9f4;
            }

            .custom-checkbox input[type="checkbox"]:checked + label:after {
                border-color: #fff;
            }

            .custom-checkbox input[type="checkbox"]:disabled + label:before {
                color: #b8b8b8;
                cursor: auto;
                box-shadow: none;
                background: #ddd;
            }

        .form-label {
            color: black;
            margin-bottom: .5rem;
        }

        label {
            display: inline-block;
            color: black;
        }

        .modal-body {
            color: black;
        }

        .filter-form {
            margin-bottom: 20px;
        }

            .filter-form .form-group {
                margin-right: 15px;
                display: inline-block;
            }
    </style>
    <script>
        $(document).ready(function () {
            // Activate tooltip
            $('[data-toggle="tooltip"]').tooltip();

            // Select/Deselect checkboxes
            var checkbox = $('table tbody input[type="checkbox"]');
            $("#selectAll").click(function () {
                if (this.checked) {
                    checkbox.each(function () {
                        this.checked = true;
                    });
                } else {
                    checkbox.each(function () {
                        this.checked = false;
                    });
                }
            });
            checkbox.click(function () {
                if (!this.checked) {
                    $("#selectAll").prop("checked", false);
                }
            });
        });
    </script>
</head>
<body>
    <div class="container-fluid">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-6">
                            <h2>Manage <b>Bookings</b></h2>
                        </div>
                        <div class="col-sm-6">
                            @if (!ViewBag.IsHotelOwner)
                            {
                                <a href="@Url.Action("Create", "Booking")" class="btn btn-primary mb-3">Create New Booking</a>
                                <a href="#deleteEmployeeModal" class="btn btn-danger" data-toggle="modal"><i class="material-icons"></i> <span>Delete</span></a>
                            }
                        </div>
                    </div>
                </div>

                <!-- Filter Form -->
                <form asp-action="Manage" method="get" class="filter-form">
                    <div class="form-group">
                        <label for="statusFilter">Status</label>
                        <select name="statusFilter" id="statusFilter" class="form-control" asp-items="@ViewBag.Statuses"></select>
                    </div>
                    <div class="form-group">
                        <label for="bookingDate">Booking Date</label>
                        <input type="date" name="bookingDate" id="bookingDate" class="form-control" value="@(ViewBag.BookingDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="form-group">
                        <label for="customerNameFilter">Customer Name</label>
                        <select name="customerNameFilter" id="customerNameFilter" class="form-control" asp-items="@ViewBag.CustomerNames"></select>
                    </div>
                    <button type="submit" class="btn btn-primary">Filter</button>
                </form>

                @if (!Model.Any())
                {
                    if (ViewBag.IsHotelOwner)
                    {
                        <p>No bookings with status Active, Finished, or Canceled available for your rooms.</p>
                    }
                    else
                    {
                        <p>No bookings with status Need Confirm, Confirmed, Active, Finished, or Canceled available to manage.</p>
                    }
                }
                else
                {
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <span class="custom-checkbox">
                                        <input type="checkbox" id="selectAll">
                                        <label for="selectAll"></label>
                                    </span>
                                </th>
                                <th>STT</th>
                                <th>Customer Name</th>
                                <th>Booking Date</th>
                                <th>Number Of Booking</th>
                                <th>Room Numbers</th>
                                <th>Total Price</th>
                                <th>Booking Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                // Cast ViewBag.ReservationsWithCustomerNames to the correct type
                                var reservationsWithCustomerNames = ViewBag.ReservationsWithCustomerNames as List<(FUMiniHotel.DAO.BookingReservation Reservation, string CustomerName)>;
                                // Use nullable tuple to handle null case
                                (FUMiniHotel.DAO.BookingReservation Reservation, string CustomerName)? reservationWithCustomer = reservationsWithCustomerNames != null
                                ? reservationsWithCustomerNames.FirstOrDefault(r => r.Reservation.BookingReservationID == item.BookingReservationID)
                                : null;
                                string customerName = reservationWithCustomer.HasValue
                                ? reservationWithCustomer.Value.CustomerName
                                : "Unknown Customer";

                                <tr>
                                    <td>
                                        <span class="custom-checkbox">
                                            <input type="checkbox" id="checkbox1" name="options[]" value="1">
                                            <label for="checkbox1"></label>
                                        </span>
                                    </td>
                                    <td>@item.BookingReservationID</td>
                                    <td>@customerName</td>
                                    <td>@item.BookingDate?.ToString("yyyy-MM-dd")</td>
                                    <td>@(item.BookingDetails?.Count() ?? 0)</td>
                                    <td>
                                        @if (item.BookingDetails != null && item.BookingDetails.Any())
                                        {
                                            @string.Join(", ", item.BookingDetails.Select(bd => bd.RoomNumber ?? "Not Assigned"))
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    </td>
                                    <td>$@(item.TotalPrice?.ToString("F2") ?? "0.00")</td>
                                    <td>
                                        @switch (item.BookingStatus)
                                        {
                                            case 1:
                                                @: Need Confirm
                                                break;
                                            case 2:
                                                @: Confirmed
                                                break;
                                            case 3:
                                                @: Active
                                                break;
                                            case 4:
                                                @: Finished
                                                break;
                                            case 5:
                                                @: Canceled
                                                break;
                                            default:
                                                @: Unknown
                                                break;
                                        }
                                    </td>
                                    <td>
                                        <a class="detail" asp-action="Detail" asp-route-id="@item.BookingReservationID">
                                            <i class="material-icons" data-toggle="tooltip" title="Detail"></i>
                                        </a>

                                        @if (!ViewBag.IsHotelOwner)
                                        {
                                            <a class="edit" asp-action="Edit" asp-route-id="@item.BookingReservationID">
                                                <i class="material-icons" data-toggle="tooltip" title="Edit"></i>
                                            </a>
                                            <a data-target="#deleteModal-@item.BookingReservationID" class="delete" data-toggle="modal">
                                                <i class="material-icons" data-toggle="tooltip" title="Delete"></i>
                                            </a>
                                        }
                                    </td>
                                </tr>
                                <!-- Delete Modal HTML (only for Staff) -->
                                @if (!ViewBag.IsHotelOwner)
                                {
                                    <div class="modal fade" id="deleteModal-@item.BookingReservationID" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel-@item.BookingReservationID" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Confirm Deletion</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">×</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    Are you sure you want to delete this booking?
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                    <form asp-action="DeleteReservation" method="post">
                                                        <input type="hidden" name="id" value="@item.BookingReservationID" />
                                                        <button type="submit" class="btn btn-danger">Delete</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="clearfix">
                        <div class="hint-text">Showing <b>@Model.Count()</b> out of <b>@totalReservations</b> entries</div>
                        <ul class="pagination">
                            @if (currentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" href="@Url.Action("Manage", new { page = currentPage - 1, statusFilter = ViewBag.StatusFilter, bookingDate = ViewBag.BookingDate, customerNameFilter = ViewBag.CustomerNameFilter })">Previous</a></li>
                            }
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")"><a class="page-link" href="@Url.Action("Manage", new { page = i, statusFilter = ViewBag.StatusFilter, bookingDate = ViewBag.BookingDate, customerNameFilter = ViewBag.CustomerNameFilter })">@i</a></li>
                            }
                            @if (currentPage < totalPages)
                            {
                                <li class="page-item"><a class="page-link" href="@Url.Action("Manage", new { page = currentPage + 1, statusFilter = ViewBag.StatusFilter, bookingDate = ViewBag.BookingDate, customerNameFilter = ViewBag.CustomerNameFilter })">Next</a></li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>